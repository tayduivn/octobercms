1567150126a:1:{s:8:"ajax.htm";a:10:{s:8:"fileName";s:8:"ajax.htm";s:7:"content";s:2400:"title = "ajax"
url = "/ajax"
is_hidden = 0
robot_index = "index"
robot_follow = "follow"
==
<?php
use RainLab\Blog\Models\Post as BlogPost;
use RainLab\Blog\Models\Category as BlogCategory;


     function ontest()
    {

        $parent_id = BlogCategory::where('slug', 'guide-crm-tieu-chuan')->first()->id;
        $this['result'] = $parent_id;
        //Get category child filter by category parent
        $this['categories'] = $categories = BlogCategory::where('parent_id', $parent_id)->get();

        //Get list post filter by each category child
        $i = 0;
        foreach( $categories as $category) {
	        $posts = BlogPost::with('categories')->listFrontEnd([
           
            'category'         => $category->id
        ]);


            foreach( $posts as $post) {
                $postsCategory[$i][] = $post;
            }
            $i++;
        }
        $this['postsCategory'] = $postsCategory;
    }
?>
==
<div class="jumbotron title-js">
    <div class="container">
        <div class="row">
            <div class="col-8">
                <h1>AJAX framework</h1>
                <p>This built-in JavaScript framework provides simple but powerful AJAX capabilities. Check out the calculator example below.</p>
            </div>
        </div>
    </div>
</div>

<div class="container">

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Calculator</h3>
        </div>
        <div class="panel-body">
            <form class="form-inline" data-request="onTest" data-request-update="calcresult: '#result'">
                <input type="text" class="form-control" value="15" name="value1" style="width:100px">
                <select class="form-control" name="operation" style="width: 70px">
                    <option>+</option>
                    <option>-</option>
                    <option>*</option>
                    <option>/</option>
                </select>
                <input type="text" class="form-control" value="5" name="value2" style="width:100px">
                <button type="submit" class="btn btn btn-primary" data-attach-loading>Calculate</button>
            </form>
        </div>
        <div class="panel-footer" id="result">
            {% partial "calcresult" %}
        </div>
    </div>

</div>
<br />";s:5:"mtime";i:1566890438;s:6:"markup";s:1432:"<div class="jumbotron title-js">
    <div class="container">
        <div class="row">
            <div class="col-8">
                <h1>AJAX framework</h1>
                <p>This built-in JavaScript framework provides simple but powerful AJAX capabilities. Check out the calculator example below.</p>
            </div>
        </div>
    </div>
</div>

<div class="container">

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Calculator</h3>
        </div>
        <div class="panel-body">
            <form class="form-inline" data-request="onTest" data-request-update="calcresult: '#result'">
                <input type="text" class="form-control" value="15" name="value1" style="width:100px">
                <select class="form-control" name="operation" style="width: 70px">
                    <option>+</option>
                    <option>-</option>
                    <option>*</option>
                    <option>/</option>
                </select>
                <input type="text" class="form-control" value="5" name="value2" style="width:100px">
                <button type="submit" class="btn btn btn-primary" data-attach-loading>Calculate</button>
            </form>
        </div>
        <div class="panel-footer" id="result">
            {% partial "calcresult" %}
        </div>
    </div>

</div>
<br />";s:4:"code";s:863:"use RainLab\Blog\Models\Post as BlogPost;
use RainLab\Blog\Models\Category as BlogCategory;


     function ontest()
    {

        $parent_id = BlogCategory::where('slug', 'guide-crm-tieu-chuan')->first()->id;
        $this['result'] = $parent_id;
        //Get category child filter by category parent
        $this['categories'] = $categories = BlogCategory::where('parent_id', $parent_id)->get();

        //Get list post filter by each category child
        $i = 0;
        foreach( $categories as $category) {
	        $posts = BlogPost::with('categories')->listFrontEnd([
           
            'category'         => $category->id
        ]);


            foreach( $posts as $post) {
                $postsCategory[$i][] = $post;
            }
            $i++;
        }
        $this['postsCategory'] = $postsCategory;
    }";s:5:"title";s:4:"ajax";s:3:"url";s:5:"/ajax";s:9:"is_hidden";s:1:"0";s:11:"robot_index";s:5:"index";s:12:"robot_follow";s:6:"follow";}}